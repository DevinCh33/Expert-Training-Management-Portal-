@page
@model ETMP.Pages.BrowseTrainingModel
@{
    ViewData["Title"] = "Browse for Trainings";
}
<script src="/js/site.js" asp-append-version="true"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<style>
    #filter-container, #searchBarContainer, #submitContainer, #sortContainer, #sortAscDesContainer {
        display: inline-block;
        margin: 10px;
    }

    #sortAscDesContainer {
        margin-left: 150px;
    }


    #applyFilterBtn {
        display: block;
        margin: 0 auto;
    }

    .item-vertical {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    #filter-btn, #search-bar, #submit-btn, #sort-btn, .proceedBtn {
        font-size: 30px;
        border-radius: 30px;
        padding: 10px;
        width: 100%;
    }

        #filter-btn:hover, #submit-btn:hover, #sort-btn:hover {
            background-color: grey;
        }

    #search-bar {
        padding-left: 25px;
    }

    #searchBarContainer {
        width: 850px;
    }

    #sortContainer {
        position: relative;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
        border-radius: 25px;
    }

        .dropdown-content.active {
            display: block;
            opacity: 1;
        }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }
            /* Change color of dropdown links on hover */
            .dropdown-content a:hover {
                background-color: #ddd;
                border-radius: 25px;
            }

    /* Show the dropdown menu on hover */
    #sort-btn:hover + .dropdown-content {
        display: block;
    }

    .icon {
        display: inline-block;
        height: 28px;
        width: 28px;
        margin-right: 10px;
        vertical-align: middle;
    }

    .icon-duration {
        background-image: url('https://img.icons8.com/material-rounded/24/000000/clock--v1.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 20px 20px;
    }

    .icon-date {
        background-image: url('https://img.icons8.com/material-rounded/24/000000/calendar--v1.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 20px 20px;
    }

    .icon-price {
        background-image: url('https://img.icons8.com/material-rounded/24/000000/money--v1.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 20px 20px;
    }

    .icon-name {
        background-image: url('https://img.icons8.com/material-rounded/24/000000/user--v1.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 20px 20px;
    }

    .filterInterface {
        position: fixed;
        top: 0;
        left: -300px;
        height: 100%;
        width: 300px;
        background-color: #fff;
        z-index: 999;
        transition: transform 0.3s ease-in-out;
    }

        .filterInterface.visible {
            transform: translateX(300px);
        }

    #filter-btn:focus + .filterInterface {
        transform: translateX(300px);
    }

    .filterOptions {
        display: block;
        font-size: 30px;
        border: solid;
        margin: auto;
        margin-bottom: 10px;
        margin-left: 10px;
        padding-left: 20px;
        padding-bottom: 10px;
        word-wrap: break-word; /* set the word-wrap property to break-word */
        overflow: hidden;
    }

    .filterOptionsContainer {
        font-size: 40px;
        height: 100%;
        width: 100%;
    }

    .slideshowContainer {
        position: relative;
        margin: 0 auto;
        width: 1200px;
        height: 800px;
        overflow: hidden;
    }

    .trainingContainer {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 50%;
        opacity: 0;
        transition: opacity 0.5s ease;
        border: dotted;
        display: flex;
        flex-direction: row;
    }

        .trainingContainer.active {
            opacity: 1;
        }

        .trainingContainer img {
            height: 50%;
            width: 50%;
        }

    .arrow {
        position: absolute;
        top: 25%;
        transform: translateY(-50%);
        width: 50px;
        height: 50px;
        background-color: #000;
        color: #fff;
        font-size: 30px;
        text-align: center;
        cursor: pointer;
        user-select: none;
    }

    .prev {
        left: 0;
    }

    .next {
        right: 0;
    }

    .arrow:hover {
        background-color: grey;
    }

    .dotsContainer {
        position: absolute;
        bottom: 400px;
        left: 50%;
        transform: translateX(-50%);
    }

    .dot {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: #bbb;
        margin: 0 5px;
        cursor: pointer;
    }

        .dot.active {
            background-color: #717171;
        }

    .trainingImageContainer, .trainingDescriptionContainer {
        width: 50%;
    }

        .trainingImageContainer img {
            padding: 30px;
            width: 100%;
            height: 100%;
        }

    .trainingDescriptionContainer {
        text-align: justify;
        padding-top: 30px;
    }


        .trainingDescriptionContainer p {
            font-size: 20px;
        }

    #searchBarContainer {
        position: relative;
    }

    #suggestions-container {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        background-color: #fff;
        border: 1px solid #ccc;
        border-top: none;
        z-index: 999;
        border-radius: 25px;
    }

    .suggestion {
        padding: 10px;
        cursor: pointer;
        border-radius: 25px;
    }

        .suggestion:hover {
            background-color: #f2f2f2;
        }

    .highlight {
        opacity: 0.5;
    }

    .highlight-text {
        opacity: 0.5;
    }

        .highlight-text::after {
            content: attr(data-after);
            opacity: 1;
        }

        .highlight-text::selection {
            background-color: transparent;
        }

</style>

<div class="buttonAndSearchBarContainer">
    <form method="post">
        <div id="filter-container">
            <button type="button" id="filter-btn">Filter</button>
        </div>
        <div id="searchBarContainer">
            <input name="search-bar" type="text" id="search-bar" placeholder="Search for Training" onkeyup="filterSuggestions()"  class="form-control input-lg" autofocus />
            <div id="suggestions-container"></div>
        </div>



        <div id="submitContainer">
            <button name="search-bar-ok" type="button" id="submit-btn">Submit</button>
        </div>
        <div id="sortContainer">
            <button id="sort-btn">Sort By</button>
            <div class="dropdown-content">
                <a href="#" class="sort-option">
                    <span class="icon icon-name"></span>
                    Name
                </a>
                <a href="#" class="sort-option">
                    <span class="icon icon-date"></span>
                    Date
                </a>
                <a href="#" class="sort-option">
                    <span class="icon icon-price"></span>
                    Price
                </a>
                <a href="#" class="sort-option">
                    <span class="icon icon-duration"></span>
                    Duration
                </a>
            </div>
        </div>
        <div id="sortAscDesContainer">
            <label>
                <input type="radio" name="sortDirection" value="ascendant"> Asc
            </label>
            <label>
                <input type="radio" name="sortDirection" value="descendant"> Desc
            </label>
        </div>
    </form>
</div>


<div class="filterInterface">
    <h1>Filters</h1>
    <div class="filterOptionsContainer">
        <form>
            <label>Categories:</label>
            <div class="filterOptions">
                <label>
                    <input type="checkbox" name="category" value="Business">
                    Business
                </label>
                <label>
                    <input type="checkbox" name="category" value="IT">
                    IT
                </label>
                <label>
                    <input type="checkbox" name="category" value="Photography">
                    Photography
                </label>
                <label>
                    <input type="checkbox" name="category" value="Self-help">
                    Self-help
                </label>
            </div>
            <div class="filterOptions">
                <label for="price-range">Price Range:</label>
                <input type="range" id="price-range" name="price-range" min="500" max="10000" value="1" />
                <br />
                <span id="price-display">RM500</span>
                <br />
                <label>Discount</label>
                <span>
                    <input type="checkbox" name="discount" value="yes">
                </span>
            </div>
            <div class="filterOptions">
                <label>Date Range:</label>
                <div>
                    <label>From:</label>
                    <input type="date" name="start_date"><br />
                    <label>To:</label>
                    <input type="date" name="end_date">
                </div>
            </div>
            <div class="applyFilterBtnContainer">
                <button id="applyFilterBtn" type="submit">Apply Filters</button>
            </div>
        </form>
    </div>
</div>

<div class="slideshowContainer">
    <div class="trainingContainer active">
        <div class="trainingImageContainer">
            <a href="https://www.w3schools.com/cssref/sel_hover.php"><img src="https://myenglishmatters.com/wp-content/uploads/2020/11/placeholder.png" /></a>
        </div>
            <div class="trainingDescriptionContainer">
                <h1>Training 1</h1>
                <p>Training Category: </p>
                <p>Training Description: Placeholder description</p>
                <p>Fee: </p>
            </div>
    </div>
    <div class="trainingContainer">
        <div class="trainingImageContainer">
            <a href="https://www.w3schools.com/cssref/sel_hover.php"><img src="https://myenglishmatters.com/wp-content/uploads/2020/11/placeholder.png" /></a>
        </div>
        <div class="trainingDescriptionContainer">
            <h1>Training 2</h1>
            <p>Training Category: </p>
            <p>Training Description: Placeholder description</p>
            <p>Fee: </p>

        </div>
    </div>
    <div class="trainingContainer">
        <div class="trainingImageContainer">
            <a href="https://www.w3schools.com/cssref/sel_hover.php"><img src="https://myenglishmatters.com/wp-content/uploads/2020/11/placeholder.png" /></a>
        </div>
        <div class="trainingDescriptionContainer">
            <h1>Training 3</h1>
            <p>Training Category: </p>
            <p>Training Description: Placeholder description</p>
            <p>Fee: </p>
        </div>
    </div>
    <div class="arrow prev">&#10094;</div>
    <div class="arrow next">&#10095;</div>
    <div class="dotsContainer">
        <span class="dot active"></span>
        <span class="dot"></span>
        <span class="dot"></span>
    </div>
</div>
<!--
<table>
    <tr>
        <th>Training Name</th>
        <th>Training Price</th>
        <th>Training Itinerary</th>
        <th>Training Venue</th>
        <th>Training Category</th>
        <th>Availability</th>
        <th>Training Description</th>
    </tr>
-->
<!--
    <tr>
        <td>training.TrainingName</td>
        <td>training.TrainingPrice</td>
        <td>training.TrainingItinerary</td>
        <td>training.TrainingVenue</td>
        <td>training.TrainingCategory</td>
        <td>training.Availability</td>
        <td>training.TrainingDescription</td>
    </tr>
</table>
-->

<script>
    var sortBtn = document.querySelector("#sort-btn");
    var dropdownContent = document.querySelector(".dropdown-content");
    var priceRange = document.getElementById("price-range");
    var priceDisplay = document.getElementById("price-display");
    var testJavaBtn1 = document.getElementById("testJavaBtn1");
    //sort button - drop down
    sortBtn.addEventListener("mouseenter", function () {
        dropdownContent.classList.add("active");
    });

    dropdownContent.addEventListener("mouseenter", function () {
        dropdownContent.classList.add("active");
    });

    dropdownContent.addEventListener("mouseleave", function () {
        dropdownContent.classList.remove("active");
    });



    //price change for slider
    priceRange.addEventListener("input", function () {
        priceDisplay.innerHTML = "RM" + priceRange.value;
    });
    //filter button
    $(document).ready(function () {
        $("#filter-btn").click(function () {
            $(".filterInterface").toggleClass("visible");
        });
    });

    $(document).ready(function () {
        $("#applyFilterBtn").click(function () {
            $(".filterInterface").toggleClass("visible");
        });
    });

    //slideshow
    var slideshowContainer = document.querySelector(".slideshowContainer");
    var trainingContainers = document.querySelectorAll(".trainingContainer");
    var arrows = document.querySelectorAll(".arrow");
    var dots = document.querySelectorAll(".dot");

    var slideIndex = 1;
    showSlides(slideIndex);

    // Next/previous controls
    arrows.forEach(arrow => {
        arrow.addEventListener("click", () => {
            if (arrow.classList.contains("prev")) {
                showSlides(slideIndex -= 1);
            } else {
                showSlides(slideIndex += 1);
            }
        });
    });

    // Thumbnail image controls
    dots.forEach((dot, index) => {
        dot.addEventListener("click", () => {
            showSlides(slideIndex = index + 1);
        });
    });

    function showSlides(n) {
        if (n > trainingContainers.length) {
            slideIndex = 1;
        }
        if (n < 1) {
            slideIndex = trainingContainers.length;
        }
        trainingContainers.forEach(container => container.classList.remove("active"));
        dots.forEach(dot => dot.classList.remove("active"));
        trainingContainers[slideIndex - 1].classList.add("active");
        dots[slideIndex - 1].classList.add("active");
    }


    //suggest and recommendation function for search bar
    
    var searchBar = document.querySelector("#search-bar")
    var suggestionsContainer = document.querySelector("#suggestions-container");

    // Function to generate a suggestion element
    function createSuggestionElement(suggestion, query) {
        var suggestionElement = document.createElement("div");
        suggestionElement.classList.add("suggestion");

        // Split the suggestion into two parts: before and after the matched query
        var queryIndex = suggestion.toLowerCase().indexOf(query.toLowerCase());
        var beforeQuery = suggestion.slice(0, queryIndex);
        var afterQuery = suggestion.slice(queryIndex + query.length);

        // Create two span elements: one for the matched query, and one for the rest of the suggestion
        var querySpan = document.createElement("span");
        querySpan.textContent = suggestion.slice(queryIndex, queryIndex + query.length);
        querySpan.classList.add("highlight");
        var restSpan = document.createElement("span");
        restSpan.textContent = afterQuery;

        // Add the two span elements to the suggestion element
        suggestionElement.appendChild(document.createTextNode(beforeQuery));
        suggestionElement.appendChild(querySpan);
        suggestionElement.appendChild(document.createTextNode(restSpan.textContent));

        // Add click listener to select the suggestion
        suggestionElement.addEventListener("click", () => {
            searchBar.value = suggestion;
            suggestionsContainer.innerHTML = "";
        });

        return suggestionElement;
    }

    // Function to show dropdown suggestions
    function showDropdownSuggestions(query) {
        // Clear any existing suggestions
        suggestionsContainer.innerHTML = "";

        // TODO: Implement logic to fetch and display dropdown suggestions based on user input
        var dropdownSuggestions = @Model.
        dropdownSuggestions.forEach((suggestion) => {
            if (suggestion.toLowerCase().includes(query.toLowerCase())) {
                var suggestionElement = createSuggestionElement(suggestion, query);
                suggestionsContainer.appendChild(suggestionElement);
            }
        });

        // Show the suggestions container
        suggestionsContainer.style.display = "block";
    }

    // Function to show internal search bar suggestions
    function showInternalSuggestions(query) {
        // Clear any existing suggestions
        suggestionsContainer.innerHTML = "";

        // TODO: Implement logic to fetch and display internal suggestions
        var internalSuggestions = ["apple", "banana", "orange"];
        internalSuggestions.forEach((suggestion) => {
            if (suggestion.toLowerCase().includes(query.toLowerCase())) {
                var suggestionElement = createSuggestionElement(suggestion, query);
                suggestionsContainer.appendChild(suggestionElement);
            }
        });

        // Show the suggestions container
        suggestionsContainer.style.display = "block";
    }

    // Add input listener to show suggestions
    searchBar.addEventListener("input", (event) => {
        var query = event.target.value;
        showDropdownSuggestions(query);
        showInternalSuggestions(query);
    });

    // Hide suggestions container when user clicks outside of it
    document.addEventListener("click", (event) => {
        if (!event.target.closest("#searchBarContainer")) {
            suggestionsContainer.style.display = "none";
        }
    });

    //autocomplete function
    var suggestions = ["apple", "banana", "orange"];
    var searchBar = document.getElementById("search-bar");

    function filterSuggestions() {
        var userInput = searchBar.value.toLowerCase();
        var filteredSuggestions = suggestions.filter(function (suggestion) {
            return suggestion.toLowerCase().includes(userInput) && suggestion !== userInput;
        });
        displaySuggestions(filteredSuggestions);
    }

    function displaySuggestions(filteredSuggestions) {
        if (filteredSuggestions.length > 0) {
            var firstSuggestion = filteredSuggestions[0];
            var userInput = searchBar.value;
            var remainingText = firstSuggestion.slice(userInput.length);
            searchBar.value = userInput + remainingText;
            searchBar.setSelectionRange(userInput.length, searchBar.value.length);
        }
    }

</script>