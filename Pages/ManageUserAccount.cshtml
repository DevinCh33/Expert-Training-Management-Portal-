@page "/ManageUserAccount"
@model ETMP.Pages.ManageUserAccountModel
@{
    ViewData["Title"] = "ManageUserAccount";
}
@using ETMP.Models

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
public string GetAntiXsrfRequestToken()
{
    return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
}
}

<!--css for datatable-->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css" />

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">

<!--required javascripts-->
<script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="//code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<style>
    table {
        border-collapse: collapse;
    }

    th.sortable {
        position: relative;
        cursor: pointer;
    }

    th.sortable:after {
        content: '';
        position: absolute;
        right: 0.5rem;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-top: 5px solid;
        border-right: 5px solid transparent;
        border-left: 5px solid transparent;
        opacity: 0.5;
    }

    th.sortable.asc:after {
        border-top: none;
        border-bottom: 5px solid;
    }

    th.sortable.desc:after {
        border-top: 5px solid;
        border-bottom: none;
    }

    .container-header {
        background-color: white;
        padding: 20px;
        border: 1px solid black;
        text-align: left;
    }

    .input-simplified {
        border: 0;
        outline: 0;
        background: transparent;
        border-bottom: 1px solid black;
        width: 85%;
        display: inline-block;
    }

    .search_button{
        width: 10%;
        padding: 10px;
        background: blue;
        color: white;
        font-size: 17px;
        border: 0px;
        border-radius: 30px;
        cursor: pointer;
        display: inline-block;
        margin-left: 30px
    }

    select{
        min-width:200px;
        font-size:24px;
    }
</style>

<div>
    <div>
        <input class="input-simplified" type="text" id="myInput" onkeyup="searchTable()" placeholder="Search account...">
        <button type="button" class="search_button" id="searchButton">Search</button>
    </div>
    <div class="mt-2">
        <label class="m-3">
            Filter type:
            <select id="filterType">
                <option value="NoFilter">No filter</option>
                <option value="Gender">Gender</option>
                <option value="OrganisationName">Organisation</option>
                <option value="TrainingTeamName">Training Team</option>
            </select>
        </label>
        <label class="m-3">
            Filter by:
            <select id="filterOptions">
                <option value="-">-</option>
            </select>
        </label>
    </div>
    <table id="userTable" class="table mt-3">
        <thead class="container-header">
            <tr>
                <th class="sortable" data-filter-column="email">Email</th>
                <th class="sortable" data-filter-column="firstName">First Name</th>
                <th class="sortable" data-filter-column="lastName">Last Name</th>
                <th class="sortable" data-filter-column="gender">Gender</th>
                <th class="sortable" data-filter-column="organisationName">Organisation</th>
                <th class="sortable" data-filter-column="trainingTeamName">Training Team</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.UserList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrganisationName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TrainingTeamName)
                    </td>
                    <td>
                        <form class="delete-account" data-user-id="@item.Id">
                            <button type="submit">Delete</button>
                        </form>
                    </td>
                    <td>
                        <form class="reset-password" data-user-id="@item.Id">
                            <button type="submit">Reset Password</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    function updateFilter() {
        var filterType = $('#filterType').val();
        $.ajax({
            url: '/ManageUserAccount?handler=FilterOptions',
            type: 'GET',
            data: { filterType: filterType },
            success: function (data) {
                var options = '';
                for (var i = 0; i < data.length; i++) {
                    if (i == 0){
                        options += '<option selected = "selected" value="' + data[i].text + '">' + data[i].text + '</option>';
                    }else{
                        options += '<option value="' + data[i].text + '">' + data[i].text + '</option>';
                    }
                }
                $('#filterOptions').html(options);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function filterTable() {
        var filterColumn = $('#filterType').val();
        var filterValue = $('#filterOptions').val();
        filterColumn = filterColumn.trim();
        filterValue = filterValue.trim();

        console.log("Type: " + filterColumn);
        console.log("Option: " + filterValue);
        // Make an AJAX request to get the filtered list of users
        $.ajax({
            url: '/ManageUserAccount?handler=FilterTable',
            type: 'GET',
            data: { filterColumn: filterColumn, filterValue: filterValue },
            dataType: 'json',
            success: function (data) {
                // Clear the table body
                $('#userTable tbody').empty();
                console.log("Cleared Table");

                // Append the filtered users to the table body
                for (var i = 0; i < data.length; i++) {
                    var user = data[i];
                    console.log("Email: " + user.email);
                    console.log("First Name: " + user.firstName);
                    console.log("Last Name: " + user.email);
                    console.log("Gender: " + user.gender);
                    console.log("Organisation: " + user.organisationName);
                    console.log("Training Team: " + user.trainingTeamName);
                    $('#userTable tbody').append(
                        '<tr>' +
                        '<td>' + user.email + '</td>' +
                        '<td>' + user.firstName + '</td>' +
                        '<td>' + user.lastName + '</td>' +
                        '<td>' + user.gender + '</td>' +
                        '<td>' + user.organisationName + '</td>' +
                        '<td>' + user.trainingTeamName + '</td>' +
                        '</tr>'
                    );
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // Handle the error
            }
        });
    }
            
    // Search table based on entered text
    function searchTable() {
        var input = $('#myInput').val().toLowerCase();

        $('#userTable tbody tr').each(function () {
            var row = $(this);
            if (row.text().toLowerCase().indexOf(input) > -1) {
                row.show();
            } else {
                row.hide();
            }
        });
    }

    $('#filterType').on('change', function () {
        updateFilter();
        setTimeout(filterTable, 300);
    });

    // Filter the user list when the filter option is changed
    $('#filterOptions').on('change', function () {
        filterTable();
    });

    $('#searchButton').click(function () {
        searchTable();
    });
</script>

<script>
    $(document).ready(function () {
        // Add click event listener to sortable headers
        $('.sortable').click(function () {
            var table = $(this).closest('table');
            var rows = table.find('tbody > tr').get();
            var columnIndex = $(this).index();
            var sortDirection = $(this).hasClass('asc') ? -1 : 1;
            $(this).toggleClass('asc');

            // Sort the rows based on the clicked column
            rows.sort(function (a, b) {
                var A = $(a).children('td').eq(columnIndex).text().toUpperCase();
                var B = $(b).children('td').eq(columnIndex).text().toUpperCase();
                if ($.isNumeric(A) && $.isNumeric(B)) {
                    return sortDirection * (parseFloat(A) - parseFloat(B));
                } else {
                    return sortDirection * (A < B ? -1 : (A > B ? 1 : 0));
                }
            });

            // Repopulate the table with the sorted rows
            $.each(rows, function (index, row) {
                table.children('tbody').append(row);
            });
        });

        // Delete Account AJAX request
        $("form.delete-account").on("submit", function(e) {
            e.preventDefault();
            var userId = $(this).data("user-id");

            // Show confirmation dialog with input field
            var confirmationInput = prompt("To confirm deletion, type 'DELETE' in the input field:");
            if (confirmationInput === "DELETE") {
                deleteAccount(userId);
            } else {
                alert("Invalid confirmation input. Account deletion canceled.");
            }
        });

        function deleteAccount(userId) {
            $.ajax({
                type: "POST",
                url: "/ManageUserAccount?handler=DeleteAccount&userId=" + userId,
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                success: function(response) {
                    // Handle success response
                    console.log("Account deleted successfully.");
                },
                error: function(xhr, status, error) {
                    // Handle error response
                    console.log("An error occurred while deleting the account.");
                }
            });
        }

        // Reset Password AJAX request
        $("form.reset-password").on("submit", function(e) {
            e.preventDefault();
            var userId = $(this).data("user-id");
            sendResetPassword(userId);
        });

        function sendResetPassword(userId) {
            $.ajax({
                type: "POST",
                url: "/ManageUserAccount?handler=SendResetPassword&userId=" + userId,
                headers:{
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                success: function(response) {
                    // Handle success response
                    console.log("Reset password request sent successfully.");
                    // You can perform any additional actions here if needed
                },
                error: function(xhr, status, error) {
                    // Handle error response
                    console.log("An error occurred while sending the reset password request.");
                    // You can display an error message or perform any other error handling here
                }
            });
        }
    });
</script>


