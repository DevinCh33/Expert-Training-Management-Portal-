@page
@model ETMP.Pages.ManageUserAccountModel
@{
    ViewData["Title"] = "ManageUserAccount";
}
@using ETMP.Models

<style>

    .container-header {
        background-color: white;
        padding: 20px;
        border: 1px solid black;
        text-align: left;
    }

    .input-simplified {
        border: 0;
        outline: 0;
        background: transparent;
        border-bottom: 1px solid black;
        width: 85%;
        display: inline-block;
    }

    .search_button{
        width: 10%;
        padding: 10px;
        background: blue;
        color: white;
        font-size: 17px;
        border: 0px;
        border-radius: 30px;
        cursor: pointer;
        display: inline-block;
        margin-left: 30px
    }

    select{
        min-width:200px;
        font-size:24px;
    }
</style>

<div>
    <div>
        <input class="input-simplified" type="text" id="myInput" onkeyup="filterTable()" placeholder="Search account...">
        <button type="button" class="search_button" id="searchButton">Search</button>
    </div>
    <div class="mt-2">
        <label class="m-3">
            Filter type:
            <select id="filterType">
                <option value="No filter">No filter</option>
                <option value="Gender">Gender</option>
                <option value="Organisation">Organisation</option>
                <option value="Training Team">Training Team</option>
            </select>
            
        </label>
        <label class="m-3">
            Filter by: 
            <select id="filterOptions">
                <option>-</option>
            </select>
        </label>
    </div>
    <table id="userTable" class="table mt-3">
        <thead class="container-header">
            <tr>
                <th data-filter-column="email">Email</th>
                <th data-filter-column="firstName">First Name</th>
                <th data-filter-column="lastName">Last Name</th>
                <th data-filter-column="gender">Gender</th>
                <th data-filter-column="organisation">Organisation</th>
                <th data-filter-column="trainingTeam">Training Team</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.UserList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrganisationName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TrainingTeamName)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!--required javascripts-->
<script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="//code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#filterType').on('change', function () {
            var filterType = $(this).val();
            $.ajax({
                url: '/ManageUserAccount?handler=FilterOptions',
                type: 'GET',
                data: { filterType: filterType },
                success: function (data) {
                    var options = '';
                    for (var i = 0; i < data.length; i++) {
                        options += '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                    }
                    $('#filterOptions').html(options);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        });
    });
</script>

<script>
    var table = $('#userTable').DataTable({
        responsive: true,
        "searching": false,
    });

    //sort button
    let sortByEmail = 'asc';
    let sortByFirstName = 'asc';
    let sortByLastName = 'asc';
    let sortByGender = 'asc';
    let sortByOrganisation = 'asc';
    let sortByTrainingTeam = 'asc';

    // Sorting by email
    $('#sortByEmail').click(() => {
        if (sortByEmail === 'asc') {
            table.order([1, 'asc']).draw();
            sortByEmail = 'desc';
        } else {
            table.order([1, 'desc']).draw();
            sortByEmail = 'asc';
        }
    });

    // Sorting by first name
    $('#sortByFirstName').click(() => {
        if (sortByFirstName === 'asc') {
            table.order([2, 'asc']).draw();
            sortByFirstName = 'desc';
        } else {
            table.order([2, 'desc']).draw();
            sortByFirstName = 'asc';
        }
    });

    // Sorting by last name
    $('#sortByLastName').click(() => {
        if (sortByLastName === 'asc') {
            table.order([3, 'asc']).draw();
            sortByLastName = 'desc';
        } else {
            table.order([3, 'desc']).draw();
            sortByLastName = 'asc';
        }
    });

    // Sorting by gender
    $('#sortByGender').click(() => {
        if (sortByGender === 'asc') {
            table.order([4, 'asc']).draw();
            sortByGender = 'desc';
        } else {
            table.order([4, 'desc']).draw();
            sortByGender = 'asc';
        }
    });

    // Sorting by organisation
    $('#sortByOrganisation').click(() => {
        if (sortByOrganisation === 'asc') {
            table.order([5, 'asc']).draw();
            sortByOrganisation = 'desc';
        } else {
            table.order([5, 'desc']).draw();
            sortByOrganisation = 'asc';
        }
    });

    // Sorting by duration
    $('#sortByGender').click(() => {
        if (sortByGender === 'asc') {
            table.order([6, 'asc']).draw();
            sortByGender = 'desc';
        } else {
            table.order([6, 'desc']).draw();
            sortByGender = 'asc';
        }
    });
</script>

<script>
    function searchTable() {
        var input = $('#myInput').val().toLowerCase();
        var filterColumn = $('#filterType').val();
        var filterOption = $('#filterOptions').val();

        $('#userTable tbody tr').each(function () {
            var row = $(this);
            if (row.text().toLowerCase().indexOf(input) > -1) {
                if (filterColumn === 'No filter' || filterOption === '-' || row.find('td[data-' + filterColumn.toLowerCase() + '="' + filterOption.toLowerCase() + '"]').length) {
                    row.show();
                } else {
                    row.hide();
                }
            } else {
                row.hide();
            }
        });
    }


    function filterTable() {
        $('#userTable').DataTable().search($('#myInput').val()).draw();
        searchTable();
    }

    $('#searchButton').click(function () {
        searchTable();
    });

</script>

